<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="error-handler-test-suite.xml" />
	<munit:test name="APIKIT:BAD_REQUEST" doc:id="1c2f295e-5d31-4991-8d6f-c5532dd48b97" expectedErrorType="APIKIT:BAD_REQUEST">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="5902dab9-2564-466e-b67e-379779bf3acf" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="region-orders-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:BAD_REQUEST" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="99658bbf-1208-4264-9389-27d3debe6ea0" name="region-orders-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="71ca8a2d-a29f-46f6-a412-25375aae5d39" is="#[MunitTools::notNullValue()]" expression="#[payload]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="APIKIT:METHOD_NOT_ALLOWED" doc:id="83dd5693-6277-4f4e-9d77-2e2bc9f6fddc" expectedErrorType="APIKIT:METHOD_NOT_ALLOWED" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="74416a22-fb8a-42de-9b9a-d814a9788b80" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="region-orders-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:METHOD_NOT_ALLOWED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="032f4f6f-99ed-4db1-971e-06fcdb55c108" name="region-orders-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="4a9b3948-cfd4-476b-82bd-9f1e115c5110" is="#[MunitTools::notNullValue()]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
	<munit:test name="APIKIT:NOT_ACCEPTABLE" doc:id="4fa4c073-cb70-43dd-80f9-ce19d81879e3" expectedErrorType="APIKIT:NOT_ACCEPTABLE" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="5a81170c-4146-4cb1-b30b-4d6b6cf8ff43" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="region-orders-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_ACCEPTABLE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="c7374941-5c0f-41ba-b850-9d6c1d304b8b" name="region-orders-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="071269f4-f2c8-482b-864a-5bac2f354400" is="#[MunitTools::notNullValue()]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
	<munit:test name="APIKIT:NOT_IMPLEMENTED" doc:id="b344a013-8d24-4ad6-8b6e-d4c2e8faf65f" expectedErrorType="APIKIT:NOT_IMPLEMENTED" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="861cf9d9-086a-450b-9765-d3c845fd18a4" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="region-orders-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_IMPLEMENTED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="91b61331-b79e-45c7-8b4d-ba12a5e57aa0" name="region-orders-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="05282ee5-ce3e-4368-ad55-a0056a461730" is="#[MunitTools::notNullValue()]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
	<munit:test name="APIKIT:NOT_FOUND" doc:id="47bd2f32-2e9f-4630-841e-575dc488af78" expectedErrorType="APIKIT:NOT_FOUND">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="88d0394e-c998-4b74-8985-09454910acce" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="region-orders-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="5b522963-7c51-46c2-a0b9-88b46d087be8" name="region-orders-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="71dbe4a4-f911-48ab-bb86-c294a6cd84e8" is="#[MunitTools::notNullValue()]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
	<munit:test name="HTTP:UNAUTHORIZED" doc:id="3b977c1f-eba6-41ff-ba78-4f73df700a2d" expectedErrorType="HTTP:UNAUTHORIZED" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="03c734fe-bf8f-4bf4-aca5-5a073a4f0193" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="region-orders-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:UNAUTHORIZED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="f7554203-9be6-4733-a59f-df5b7feadf44" name="region-orders-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="48ca8188-529c-4998-993f-e3c98833517a" is="#[MunitTools::notNullValue()]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
	<munit:test name="HTTP:FORBIDDEN" doc:id="58574030-9a33-4584-b130-3aa043fa7578" expectedErrorType="HTTP:FORBIDDEN" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="49240714-def8-480c-a99b-cd152a6d892b" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="region-orders-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:FORBIDDEN" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="fce1bed6-1ac2-4979-b8a8-80d40ad5798e" name="region-orders-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="f11893d6-8d7e-45af-9ce4-af542b018ba2" is="#[MunitTools::notNullValue()]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
	<munit:test name="HTTP:INTERNAL_SERVER_ERROR" doc:id="5283cb76-336c-4ac2-a147-ae612f1df711" expectedErrorType="HTTP:INTERNAL_SERVER_ERROR" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="34d395f4-e448-475b-955a-dffb764080a1" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="region-orders-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="HTTP:INTERNAL_SERVER_ERROR" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="5052bb7e-38a1-45e9-b5b2-24847704351e" name="region-orders-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="1c9e2518-540d-4799-ad28-146a3eb957a0" is="#[MunitTools::notNullValue()]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
	<munit:test name="APIKIT:UNSUPPORTED_MEDIA_TYPE" doc:id="880f550d-27f0-4ee4-8414-d3972f6a7a04" expectedErrorType="APIKIT:UNSUPPORTED_MEDIA_TYPE" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="0fb91a1b-a243-49bd-9eb8-49370068fe77" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="region-orders-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:UNSUPPORTED_MEDIA_TYPE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="d2f673f3-651d-4e80-84a1-890a98a0e84b" name="region-orders-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="4b16013f-6311-4565-9963-09cd277b79a2" is="#[MunitTools::notNullValue()]" expression="#[payload]" />
		</munit:validation>
	</munit:test>
	<munit:test name="ANY" doc:id="67ab4a41-ee90-4e77-8142-c7f8e5a90a1b" expectedErrorType="ANY" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="d51ed0a6-cad1-4d23-a540-e37f18f2977a" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="region-orders-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="ANY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="283fd6ae-3442-4592-ab10-cf441b0aefb7" name="region-orders-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="98c5b2d5-6a81-411f-ad43-8eaf5d173e9e" is="#[MunitTools::notNullValue()]" expression="#[payload]" />
		</munit:validation>
	</munit:test>


</mule>
